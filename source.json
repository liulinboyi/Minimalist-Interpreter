{
  "type": "Program",
  "start": 0,
  "end": 176,
  "body": [
    {
      "type": "FunctionDeclaration",
      "start": 0,
      "end": 139,
      "id": {
        "type": "Identifier",
        "start": 9,
        "end": 13,
        "name": "test"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "start": 14,
          "end": 15,
          "name": "i"
        }
      ],
      "body": {
        "type": "BlockStatement",
        "start": 17,
        "end": 139,
        "body": [
          {
            "type": "IfStatement",
            "start": 23,
            "end": 59,
            "test": {
              "type": "BinaryExpression",
              "start": 27,
              "end": 33,
              "left": {
                "type": "Identifier",
                "start": 27,
                "end": 28,
                "name": "i"
              },
              "operator": "==",
              "right": {
                "type": "Literal",
                "start": 32,
                "end": 33,
                "value": 0,
                "raw": "0"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 35,
              "end": 59,
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 45,
                  "end": 53,
                  "argument": {
                    "type": "Literal",
                    "start": 52,
                    "end": 53,
                    "value": 0,
                    "raw": "0"
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "start": 64,
            "end": 100,
            "test": {
              "type": "BinaryExpression",
              "start": 68,
              "end": 74,
              "left": {
                "type": "Identifier",
                "start": 68,
                "end": 69,
                "name": "i"
              },
              "operator": "==",
              "right": {
                "type": "Literal",
                "start": 73,
                "end": 74,
                "value": 1,
                "raw": "1"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "start": 76,
              "end": 100,
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 86,
                  "end": 94,
                  "argument": {
                    "type": "Literal",
                    "start": 93,
                    "end": 94,
                    "value": 1,
                    "raw": "1"
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ReturnStatement",
            "start": 105,
            "end": 137,
            "argument": {
              "type": "BinaryExpression",
              "start": 112,
              "end": 137,
              "left": {
                "type": "CallExpression",
                "start": 112,
                "end": 123,
                "callee": {
                  "type": "Identifier",
                  "start": 112,
                  "end": 116,
                  "name": "test"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 117,
                    "end": 122,
                    "left": {
                      "type": "Identifier",
                      "start": 117,
                      "end": 118,
                      "name": "i"
                    },
                    "operator": "-",
                    "right": {
                      "type": "Literal",
                      "start": 121,
                      "end": 122,
                      "value": 2,
                      "raw": "2"
                    }
                  }
                ],
                "optional": false
              },
              "operator": "+",
              "right": {
                "type": "CallExpression",
                "start": 126,
                "end": 137,
                "callee": {
                  "type": "Identifier",
                  "start": 126,
                  "end": 130,
                  "name": "test"
                },
                "arguments": [
                  {
                    "type": "BinaryExpression",
                    "start": 131,
                    "end": 136,
                    "left": {
                      "type": "Identifier",
                      "start": 131,
                      "end": 132,
                      "name": "i"
                    },
                    "operator": "-",
                    "right": {
                      "type": "Literal",
                      "start": 135,
                      "end": 136,
                      "value": 1,
                      "raw": "1"
                    }
                  }
                ],
                "optional": false
              }
            }
          }
        ]
      }
    },
    {
      "type": "VariableDeclaration",
      "start": 141,
      "end": 158,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 145,
          "end": 158,
          "id": {
            "type": "Identifier",
            "start": 145,
            "end": 148,
            "name": "res"
          },
          "init": {
            "type": "CallExpression",
            "start": 151,
            "end": 158,
            "callee": {
              "type": "Identifier",
              "start": 151,
              "end": 155,
              "name": "test"
            },
            "arguments": [
              {
                "type": "Literal",
                "start": 156,
                "end": 157,
                "value": 3,
                "raw": "3"
              }
            ],
            "optional": false
          }
        }
      ],
      "kind": "let"
    },
    {
      "type": "ExpressionStatement",
      "start": 160,
      "end": 176,
      "expression": {
        "type": "CallExpression",
        "start": 160,
        "end": 176,
        "callee": {
          "type": "MemberExpression",
          "start": 160,
          "end": 171,
          "object": {
            "type": "Identifier",
            "start": 160,
            "end": 167,
            "name": "console"
          },
          "property": {
            "type": "Identifier",
            "start": 168,
            "end": 171,
            "name": "log"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "start": 172,
            "end": 175,
            "name": "res"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "module"
}